带有 ALPHA 选项的 BY 选项的实现
----------------------------------

``BY`` 选项默认假设权重键保存的值为数字值，
如果权重键保存的是字符串值的话，
那么就需要在使用 ``BY`` 选项的同时，
配合使用 ``ALPHA`` 选项。

举个例子，
如果 ``fruits`` 集合包含的三种水果都有一个相应的字符串编号：

::

    redis> SADD fruits "apple" "banana" "cherry"
    (integer) 3

    redis> MSET apple-id "FRUIT-25" banana-id "FRUIT-79" cherry-id "FRUIT-13"
    OK

那么我们可以使用水果的编号为权重，
对 ``fruits`` 集合进行排序：

::

    redis> SORT fruits BY *-id ALPHA
    1) "cherry"
    2) "apple"
    3) "banana"

服务器执行 ``SORT fruits BY *-id ALPHA`` 命令的详细步骤如下：

1. 创建一个 ``redisSortObject`` 结构数组，
   数组的长度等于 ``fruits`` 集合的大小。

2. 遍历数组，
   将各个数组项的 ``obj`` 指针分别指向 ``fruits`` 集合的各个元素，
   如图 21-12 所示。

3. 遍历数组，
   根据各个数组项的 ``obj`` 指针所指向的集合元素，
   以及 ``BY`` 选项所给定的模式 ``*-id`` ，
   查找相应的权重键：
   
   - 对于 ``"apple"`` 元素，
     查找程序返回权重键 ``"apple-id"`` 。

   - 对于 ``"banana"`` 元素，
     查找程序返回权重键 ``"banana-id"`` 。

   - 对于 ``"cherry"`` 元素，
     查找程序返回权重键 ``"cherry-id"`` 。

4. 将各个数组项的 ``u.cmpobj`` 指针分别指向相应的权重键（一个字符串对象），
   如图 21-13 所示。

5. 以各个数组项的权重键的值为权重，
   对数组执行字符串排序，
   结果如图 12-14 所示：

   - 权重为 ``"FRUIT-13"`` 的 ``"cherry"`` 元素位于数组的索引 ``0`` 位置上。

   - 权重为 ``"FRUIT-25"`` 的 ``"apple"`` 元素位于数组的索引 ``1`` 位置上。

   - 权重为 ``"FRUIT-79"`` 的 ``"banana"`` 元素位于数组的索引 ``2`` 位置上。

6. 遍历数组，
   依次将数组项的 ``obj`` 指针所指向的集合元素返回给客户端。

其他 ``SORT <key> BY <pattern> ALPHA`` 命令的执行步骤也和这里给出的步骤类似。

.. graphviz::

    digraph {

        rankdir = LR;

        node [shape = record];

        subgraph cluster_fruits {

            label = "fruits 集合";

            style = dashed;

            apple [label = "StringObject \n \"apple\""];
            banana [label = "StringObject \n \"banana\""];
            cherry [label = "StringObject \n \"cherry\""];

            apple -> cherry -> banana [style = invis];
        }

        subgraph cluster_array {

            style = invis;

            array [label = " array | { <array0> array[0] \n redisSortObject | { <obj0> obj | u } } | { <array1> array[1] \n redisSortObject | { <obj1> obj | u } } | { <array2> array[2] \n redisSortObject | { <obj2> obj | u } } "];
        }
       array:obj0 -> apple;
       array:obj1 -> cherry;
       array:obj2 -> banana;

       label = "\n 图 21-12    将 obj 指针指向集合的各个元素";

    }

.. graphviz::

    digraph {

        rankdir = LR;

        node [shape = record];

        subgraph cluster_fruits {

            label = "fruits 集合";

            style = dashed;

            apple [label = "StringObject \n \"apple\""];
            banana [label = "StringObject \n \"banana\""];
            cherry [label = "StringObject \n \"cherry\""];

            apple -> cherry -> banana [style = invis];
        }

        subgraph cluster_array {

            style = invis;

            array [label = " array | { <array0> array[0] \n redisSortObject | { <obj0> obj | <cmpobj0> u.cmpobj } } | { <array1> array[1] \n redisSortObject | { <obj1> obj | <cmpobj1> u.cmpobj } } | { <array2> array[2] \n redisSortObject | { <obj2> obj | <cmpobj2> u.cmpobj } } "];
        }
       array:obj0 -> apple;
       array:obj1 -> cherry;
       array:obj2 -> banana;

       apple_id [label = "StringObject \n \"FRUIT-25\""];
       banana_id [label = "StringObject \n \"FRUIT-79\""];
       cherry_id [label = "StringObject \n \"FRUIT-13\""];

       array:cmpobj0 -> apple_id;
       array:cmpobj1 -> cherry_id;
       array:cmpobj2 -> banana_id;


       label = "\n 图 21-13    将 u.cmpobj 指针指向权重键";

    }

.. graphviz::

    digraph {

        rankdir = LR;

        node [shape = record];

        subgraph cluster_fruits {

            label = "fruits 集合";

            style = dashed;

            apple [label = "StringObject \n \"apple\""];
            banana [label = "StringObject \n \"banana\""];
            cherry [label = "StringObject \n \"cherry\""];

            apple -> cherry -> banana [style = invis];
        }

        subgraph cluster_array {

            style = invis;

            array [label = " array | { <array0> array[0] \n redisSortObject | { <obj0> obj | <cmpobj0> u.cmpobj } } | { <array1> array[1] \n redisSortObject | { <obj1> obj | <cmpobj1> u.cmpobj } } | { <array2> array[2] \n redisSortObject | { <obj2> obj | <cmpobj2> u.cmpobj } } "];
        }
       array:obj0 -> cherry;
       array:obj1 -> apple;
       array:obj2 -> banana;

       apple_id [label = "StringObject \n \"FRUIT-25\""];
       banana_id [label = "StringObject \n \"FRUIT-79\""];
       cherry_id [label = "StringObject \n \"FRUIT-13\""];

       array:cmpobj0 -> cherry_id;
       array:cmpobj1 -> apple_id;
       array:cmpobj2 -> banana_id;


       label = "\n 图 21-14    按 u.cmpobj 所指向的字符串对象进行排序之后的数组";

    }
